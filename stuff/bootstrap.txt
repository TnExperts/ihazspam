# Linux Ubuntu Server 16.04.1 LTS

Yakkety = 16.10
Xenial = 16.04


## Install updates

    * apt-get update
    * apt-get upgrade
    * shutdown -r now
    * apt-get dist-upgrade
    * shutdown -r now
    * apt-get autoclean clean autoremove


## Setup firewall (ssh, http, https)

    * apt-get install ufw
    * ufw logging off
    * ufw default deny incoming
    * ufw default allow outgoing
    * ufw allow 22,25,80,443/tcp
    * ufw enable


## Setup OpenSSH

    * apt-get install openssh

    ### SSH Keys
        Depuis l'ordinateur qu'on va prendre pour se logger sur ihazspam.ca, generer
        des cles SSH et les uploader sur le serveur en assumant que le login sur le
        remote server est simon. Ca marche bien quand les username matchent sur les
        deux machines car ensuite on peut juste faire *ssh ihazspam*

        * ssh-keygen -b 4096
        * ssh-copy-id simon@ihazspam

    ### Enable public key login only
        Sur le serveur remote:

        * vi /etc/ssh/sshd_config
            ** X11Forwarding no
            ** ChallengeResponseAuthentication no
            ** PasswordAuthentication no
            ** LogLevel SILENT
            ** PermitRootLogin no

        Restart SSH server

            * service ssh stop
            * service ssh start


## Install postgresql 9.6 (c'est la v9.5 qui vient stock avec Ubuntu 16.04)

* sudo add-apt-repository "deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main"
* sudo wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
* sudo apt-get update
* sudo apt-get install postgresql-9.6 postgresql-contrib-9.6


## Install NGINX

* sudo apt-get install nginx nginx-extras


## Configure postgresql (add ihazspam role and matching non-login Linux user)

* sudo -u postgres createuser --createdb ihazspam
* sudo adduser --system --no-create-home --ingroup nogroup ihazspam


## Install system-wide .Net Core 1.1 Framework (no SDK)
Source: https://github.com/dotnet/core/blob/master/release-notes/preview-download.md

* sudo sh -c 'echo "deb [arch=amd64] https://apt-mo.trafficmanager.net/repos/dotnet-release/ xenial main" > /etc/apt/sources.list.d/dotnetdev.list'
* sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 417A0893
* sudo apt-get update
* sudo apt-get install dotnet-sharedframework-microsoft.netcore.app-1.1.0

Allow non-root .Net process to bind to port < 1024

* sudo setcap 'cap_net_bind_service=+ep' /usr/share/dotnet/dotnet


## Create IHazSpam database

* sudo -u postgres createdb --owner=ihazspam --encoding=UTF8 ihazspam
* sudo -u ihazspam psql
** \password                         ----> password settter a ihazspampwd


## Create/recreate IHazSpam schema

* sudo -u ihazspam psql --file=schema.sql

## Configure NGINX /etc/nginx/sites-available/default

server {
    listen 80 default_server;
    listen [::]:80 default_server;

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate /etc/letsencrypt/live/ihazspam.ca/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ihazspam.ca/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:8m;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # Intermediate configuration. tweak to your needs.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling
    # Fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## Verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/ihazspam.ca/chain.pem;

    ###############################################################################
    ###############################################################################

    server_name ihazspam.ca;
    more_clear_headers Server;
    gzip off;

    add_header Cache-Control "max-age=14400, private, no-transform, must-revalidate"

    location / {
        gzip_static on;
        root /ihazspam/bin/Web/wwwroot/;
        index index.html;
    }

    location /api/ {
        add_header Cache-Control "no-cache, no-store, must-revalidate"
        add_header Expires "-1"
        add_header Pragma "nocache"
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /m/ {
        root /ihazspam/data/;
        log_not_found off;
        gzip_static on;
        autoindex off;

        location ~* \.(json)$ {
            add_header Cache-Control "max-age=0, private, no-transform, must-revalidate";
        }

        if ($uri ~ ".*/attachments/.*"){
            add_header Content-Disposition 'attachment;';
        }
    }
}


## Install app in /ihazspam

* Copier le package et changer le ownership

sudo chown -R www-data:www-data /ihazspam
sudo find /ihazspam -type f -exec chmod 644 {} +
sudo find /ihazspam -type d -exec chmod 755 {} +

* Copier les systemd files

sudo cp /ihazspam/stuff/init/* /etc/systemd/system
sudo systemctl enable ihazspam_mx.service
sudo systemctl enable ihazspam_web.service
sudo systemctl enable ihazspam_mailextractor.service
sudo systemctl enable ihazspam_mailcleaner.service
sudo systemctl enable ihazspam_mailcleaner.timer
sudo systemctl enable ihazspam_letsencrypt.service
sudo systemctl enable ihazspam_letsencrypt.timer
sudo systemctl start ihazspam_mx.service
sudo systemctl start ihazspam_web.service
sudo systemctl start ihazspam_mailextractor.service
sudo systemctl start ihazspam_mailcleaner.timer
sudo systemctl start ihazspam_letsencrypt.timer